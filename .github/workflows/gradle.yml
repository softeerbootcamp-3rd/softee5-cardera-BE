name: Java CI with Gradle

on:
  push:
    branches: [ "github-action" ]
  pull_request:
    branches: [ "github-action" ]

permissions:
  contents: read

jobs:
  build:

    runs-on: ubuntu-20.04

    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: make rds-prod.yml
        run: |
          cd ./src/main/resources
          touch ./rds-prod.yml
          echo "${{ secrets.RDS_PROD }}" > ./application-prod.yml

      - name: make api-info.yml
        run: |
          cd ./src/main/resources
          touch ./api-info.yml
          echo "${{ secrets.API_INFO }}" > ./api-info.yml

      # gradle을 통해 소스를 빌드.
      - name: Build with Gradle
        run: |
          chmod +x ./gradlew
          ./gradlew clean build -x test

      - name: Create zip file
        run: zip -r ./cardera-springboot-$GITHUB_SHA.zip ./build/libs/*.jar

      - name: AWS credential 설정
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-region: ap-northeast-2
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - name: Upload to S3
        run: aws s3 cp --region ap-northeast-2 --acl private ./cardera-springboot-$GITHUB_SHA.zip s3://cardera-code/

      - name: Code Deploy
        run: aws deploy create-deployment --application-name cardera-deploy --deployment-config-name CodeDeployDefault.AllAtOnce --deployment-group-name cardera-deploy-group --s3-location bucket=cardera-code,key=cardera/$GITHUB_SHA.zip,bundleType=zip

